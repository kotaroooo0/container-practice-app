name: deploy
on:
  push:
    branches: master
jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name:  Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & Push Image to ECR
        env:
          ECR_DOMAIN: ${{ secrets.ECR_DOMAIN }}
        run: |
          docker build -t ${ECR_DOMAIN}:latest .
          docker push ${ECR_DOMAIN}:latest

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sample-image
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition webapp-service --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: sample-webapp
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: webapp-service
          cluster: sample-ecs-cluster
          wait-for-service-stability: true

      # - name: Deploy Amazon ECS task definition
        # uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        # with:
        #   task-definition: ${{ steps.task-def.outputs.task-definition }}
        #   service: ecs-devops-sandbox-service
        #   cluster: ecs-devops-sandbox-cluster
        #   wait-for-service-stability: true

      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: ap-northeast-1
      #   run: |
      #     aws ecs describe-task-definition --task-definition webapp-service | jq  '.taskDefinition | { containerDefinitions: .containerDefinitions }' > definition.json
      #     aws ecs register-task-definition --execution-role-arn arn:aws:iam::260892174375:role/ecs-task-role --family webapp-service --cli-input-json file://definition.json
      #     aws ecs update-service --cluster sample-ecs-cluster --service webapp-service --task-definition webapp-service
      - name: migrations
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-1
        run: |
          aws ecs run-task --cluster sample-ecs-cluster --task-definition webapp-migration
